plugins {
    id "io.qameta.allure" version "2.5"
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'io.qameta.allure'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

allure {  // https://github.com/allure-framework/allure-gradle
    autoconfigure = true
    version = '2.6.0'
    // specify report generator version, note, this property is necessary to enable allure and aggregatedAllureReport tasks

    // downloadLink = 'https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.6.0/allure-2.6.0.zip'
    // custom location of Allure distribution to download from,
    // by default allure is downloaded from bintray by specified version and installed to .allure folder in the project root.
}

configurations {
    agent
}

test {
    doFirst {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }
    useTestNG()
}

dependencies {
    agent "org.aspectj:aspectjweaver:1.8.0"
    testCompile group: 'org.testng', name: 'testng', version: '6.13.1'
    //testCompile group: 'io.qameta.allure', name: 'allure-maven', version: '2.9'
    // this is needed only for allure annotations for source code
}

/**
 * How to run:
 * !!First of all allure report cannot be generated anyhow without gradle plugin
 *
 * so in order to create a content for folder build/allure-results you need gradle plugin
 *
 * the difference is only in the way you want to create a web-container for repoty
 *
 * if you don`t want to use gradle plugin for it, you can install binaries to you system
 * brew install allure
 *
 * and later
 * allure serve build/allure-results
 */



